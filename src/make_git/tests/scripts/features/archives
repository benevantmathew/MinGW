#                                                              -*-mode: perl-*-

$description = "Test GNU make's archive management features.";

$details = "\
This only works on systems that support it.";

# If this instance of make doesn't support archives, skip it
exists $FEATURES{archives} or return -1;

# Create some .o files to work with
utouch(-60, qw(a1.o a2.o a3.o));

# Very simple
run_make_test('all: libxx.a(a1.o)',
              '', "ar rv libxx.a a1.o\nar: creating libxx.a\na - a1.o\n");

# Multiple .o's.  Add a new one to the existing library
run_make_test('all: libxx.a(a1.o a2.o)',
              '', "ar rv libxx.a a2.o\na - a2.o\n");

# Touch one of the .o's so it's rebuilt
utouch(-40, 'a1.o');
run_make_test(undef, '', "ar rv libxx.a a1.o\nr - a1.o\n");

# Use wildcards
run_make_test('all: libxx.a(*.o)',
              '', "#MAKE#: Nothing to be done for 'all'.\n");

# Touch one of the .o's so it's rebuilt
utouch(-30, 'a1.o');
run_make_test(undef, '', "ar rv libxx.a a1.o\nr - a1.o\n");

# Use both wildcards and simple names
utouch(-50, 'a2.o');
run_make_test('all: libxx.a(a3.o *.o)', '',
              "ar rv libxx.a a3.o\na - a3.o\nar rv libxx.a a2.o\nr - a2.o\n");

# Check whitespace handling
utouch(-40, 'a2.o');
run_make_test('all: libxx.a(  a3.o    *.o     )', '',
              "ar rv libxx.a a2.o\nr - a2.o\n");

rmfiles(qw(a1.o a2.o a3.o libxx.a));

# Check non-archive targets
# See Savannah bug #37878
run_make_test(q!
all: foo(bar).baz
foo(bar).baz: ; @echo '$@'
!,
              '', "foo(bar).baz\n");

# Check renaming of archive targets.
# See Savannah bug #38442

mkdir('artest', 0777);
touch('foo.vhd');

run_make_test(q!
DIR = artest
vpath % $(DIR)
default: lib(foo)
(%): %.vhd ; @cd $(DIR) && touch $(*F) && $(AR) $(ARFLAGS) $@ $(*F) >/dev/null 2>&1 && rm $(*F)
.PHONY: default
!,
              '', "");

run_make_test(undef, '', "#MAKE#: Nothing to be done for 'default'.\n");

unlink('foo.vhd');
remove_directory_tree('artest');

# This tells the test driver that the perl test script executed properly.
1;
